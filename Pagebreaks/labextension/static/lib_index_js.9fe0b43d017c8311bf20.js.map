{"version":3,"file":"lib_index_js.9fe0b43d017c8311bf20.js","mappings":"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","sources":["webpack://Pagebreaks/./src/index.ts","webpack://Pagebreaks/./style/index.css","webpack://Pagebreaks/./style/index.css?0140"],"sourcesContent":["/* eslint-disable prettier/prettier */\nimport {\n  JupyterFrontEnd,\n  JupyterFrontEndPlugin,\n  LabShell\n} from '@jupyterlab/application';\n// import { IEditorServices } from '@jupyterlab/codeeditor';\nimport { ISettingRegistry } from '@jupyterlab/settingregistry';\nimport { INotebookTracker, NotebookPanel } from '@jupyterlab/notebook';\nimport '../style/index.css';\nimport _ from 'lodash';\nimport { Kernel, KernelMessage } from '@jupyterlab/services';\n\nclass schemaManager {\n  previousSchema: any | null;\n  future: Kernel.IShellFuture<\n    KernelMessage.IExecuteRequestMsg,\n    KernelMessage.IExecuteReplyMsg\n  > | null;\n  constructor() {\n    this.previousSchema = null;\n    this.future = null;\n  }\n}\ninterface IPagebreakCell {\n  index: number;\n  id: string;\n  type: string;\n  variables: Array<string>;\n}\ninterface IPagebreakScope {\n  index: number; //index in the list of cells\n  pbNum: number; //index in the list of pagebreak scopes\n  exportedVariables: Array<string>; //variables this scope exports\n}\ntype PagebreakSchema = Array<IPagebreakCell>;\ntype PagebreakScopeList = Array<IPagebreakScope>;\n\nconst plugin: JupyterFrontEndPlugin<void> = {\n  id: 'Pagebreaks:plugin',\n  description: 'A JupyterLab extension.',\n  autoStart: true,\n  requires: [INotebookTracker],\n  optional: [ISettingRegistry],\n  activate: (\n    app: JupyterFrontEnd,\n    notebookTracker: INotebookTracker,\n    settingRegistry: ISettingRegistry | null\n  ) => {\n    console.log('JupyterLab extension Pagebreaks is activated!!!!');\n\n    const notebook = app.shell?.currentWidget as NotebookPanel;\n\n    const manager = new schemaManager();\n    if (notebook) {\n      notebook.revealed.then(() => {\n        console.log('top level CALL');\n        updatePagebreak(app, manager);\n      });\n    } else {\n      // setTimeout(() => {\n      //   console.log('timeout CALL');\n      //   updatePagebreak(app, manager);\n      // }, 1000);\n    }\n\n    notebookTracker.currentChanged.connect(() => {\n      if (notebookTracker.currentWidget instanceof NotebookPanel) {\n        const notebook = app.shell?.currentWidget as NotebookPanel;\n        if (notebook) {\n          notebook.content.cellInViewportChanged.connect(() => {\n            if (notebookTracker.currentWidget instanceof NotebookPanel) {\n              const notebook = app.shell?.currentWidget as NotebookPanel;\n              if (notebook) {\n                notebook.revealed.then(() => {\n                  console.log('cellinviewport CALL');\n                  updatePagebreak(app, manager);\n                });\n              }\n            }\n          });\n          notebook.revealed.then(() => {\n            console.log('currentChanged CALL');\n            updatePagebreak(app, manager);\n          });\n        }\n      }\n    });\n    notebookTracker.activeCellChanged.connect(() => {\n      // console.log('activecell updated!');\n      // const registry = app.docRegistry;\n      // const factory = registry.getWidgetFactory('Notebook');\n      // console.log('found factory', factory?.name);\n      // (factory as NotebookWidgetFactory).contentFactory.createCodeCell = lambda;\n      if (app.shell?.currentWidget instanceof NotebookPanel) {\n        const notebook = app.shell?.currentWidget as NotebookPanel;\n        if (notebook) {\n          notebook.revealed.then(() => {\n            // console.log('notebook revealed');\n            // console.log('nb id', notebook.id);\n            console.log('activeCellChanged CALL');\n            updatePagebreak(app, manager);\n            // console.log('current selection is:');\n            // console.log(notebook.content.activeCellIndex);\n          });\n        }\n      }\n    });\n    notebookTracker.widgetUpdated.connect(() => {\n      console.log('widget updated');\n    });\n    if (app.shell.currentWidget instanceof NotebookPanel) {\n      console.log('found shell');\n      const notebook = app.shell.currentWidget as NotebookPanel;\n      Promise.all([notebook.sessionContext.ready]).then(async () => {\n        console.log('context CALL');\n        updatePagebreak(app, manager);\n      });\n    }\n\n    (app.shell as LabShell).activeChanged.connect(() => {\n      if (app.shell.currentWidget instanceof NotebookPanel) {\n        const notebook = app.shell.currentWidget as NotebookPanel;\n        if (notebook) {\n          notebook.revealed.then(() => {\n            console.log('LabShell activeChanged CALL');\n            updatePagebreak(app, manager);\n            // console.log('current selection is:');\n            // console.log(notebook.content.activeCellIndex);\n          });\n        }\n      }\n    });\n\n    if (settingRegistry) {\n      settingRegistry\n        .load(plugin.id)\n        .then(settings => {\n          console.log('Pagebreaks settings loaded:', settings.composite);\n        })\n        .catch(reason => {\n          console.error('Failed to load settings for Pagebreaks.', reason);\n        });\n    }\n  }\n};\n\nfunction tagNotebookCells(\n  notebook: NotebookPanel,\n  schema: {\n    cellsToScopes:\n    | {\n      [x: string]: number;\n    }\n    | undefined;\n    scopeList: {\n      [x: number]: string[];\n    };\n    scopes: PagebreakScopeList;\n  }\n) {\n  // if we have a notebook with no real pagebreak cells, dont change the formatting\n  if (schema.scopeList[0].find(v => v === 'pagebreaks_simulated')) {\n    return;\n  }\n\n  console.log('schema', schema.cellsToScopes)\n  notebook?.content?.widgets.forEach((cell, index) => {\n    // add styling for code cells\n    if (cell.model.type === 'code') {\n      cell.addClass('jp-pb-pagebreakCodeCell');\n      if (schema.cellsToScopes && schema.cellsToScopes[cell.model.id] !== undefined) {\n        const scopeNum = schema.cellsToScopes[cell.model.id]\n\n        if (scopeNum !== undefined) {\n          console.log('scopenum', scopeNum)\n          if (scopeNum % 2 === 0) {\n            cell.addClass('jp-pb-pagebreakEven');\n          } else {\n            cell.addClass('jp-pb-pagebreakOdd');\n          }\n\n        }\n      }\n    } else {\n      cell.removeClass('jp-pb-pagebreakCodeCell');\n    }\n\n\n    //add styling for pagebreak cells\n    if (\n      cell.model.type === 'raw' &&\n      cell.model.sharedModel.getSource().startsWith('pb')\n    ) {\n      cell.addClass('jp-pb-pagebreakCell');\n      const scope = schema.scopes.find(cell => (cell.index === index))\n\n      if (scope !== undefined) {\n\n        if (scope.pbNum % 2 === 0) {\n          console.log('scopeeven', scope)\n          cell.addClass('jp-pb-pagebreakEven')\n        } else {\n          console.log('scopeodd', scope)\n          cell.addClass('jp-pb-pagebreakOdd')\n        }\n      }\n\n    } else {\n      cell.removeClass('jp-pb-pagebreakCell');\n    }\n  });\n}\n\nfunction buildNotebookSchema(notebook: NotebookPanel) {\n  const cellList: PagebreakSchema = [];\n  notebook?.content?.widgets.forEach((cell, index) => {\n    if (cell.model.type === 'code') {\n      const newCell: IPagebreakCell = {\n        index: index,\n        id: cell.model.id,\n        type: cell.model.type,\n        variables: []\n      };\n      cellList.push(newCell);\n    } else if (cell.model.type === 'raw') {\n      const content = cell.model.sharedModel.getSource();\n      if (content.startsWith('pb')) {\n        const names = content.split(' ').filter(name => name !== 'pb');\n        // console.log('found pb names', names);\n        const newCell: IPagebreakCell = {\n          index: index,\n          id: cell.model.id,\n          type: 'pagebreak',\n          variables: names\n        };\n        cellList.push(newCell);\n      }\n    }\n  });\n  cellList.sort((cellA, cellB) => cellA.index - cellB.index);\n\n  const scopeList: PagebreakScopeList = cellList\n    .filter(cell => cell.type === 'pagebreak')\n    .map((cell, index) => ({\n      index: cell.index, //index in the list of cells\n      pbNum: index, //index in the list of pagebreak scopes\n      exportedVariables: cell.variables //variables this scope exports\n    }));\n  if (scopeList.length === 0) {\n    scopeList.push({\n      index: cellList.length,\n      pbNum: 0,\n      exportedVariables: ['pagebreaks_simulated']\n    });\n  }\n  //Builds an Object with structure [cell.id]: matching pagebreak scope\n  const cellsToScopes = cellList\n    .filter(cell => cell.type === 'code')\n    .map(cell => {\n      const currentScope = scopeList\n        .filter(pbCell => pbCell.index > cell.index)\n        ?.sort((cellA, cellB) => cellA.index - cellB.index)\n        ?.at(0);\n      if (!currentScope) {\n        const lastScope = scopeList\n          .sort((cellA, cellB) => cellA.index - cellB.index)\n          .at(-1);\n        if (lastScope) {\n          return {\n            [cell.id]: lastScope.pbNum + 1\n          };\n        } else if (scopeList.length === 0) {\n          //if we have a nb without any pagebreaks\n          return { [cell.id]: 0 };\n        } else {\n          console.error(\"Can't find matching scope for cell\", cell);\n        }\n      } else {\n        return {\n          [cell.id]: currentScope.pbNum\n        };\n      }\n    })\n    .reduce((prev, current) => ({\n      ...prev,\n      ...current\n    }));\n\n  return {\n    cellsToScopes: cellsToScopes,\n    scopeList: scopeList\n      .map(cell => ({\n        [cell.pbNum]: cell.exportedVariables,\n      }))\n      .reduce((prev, cur) => ({\n        ...prev,\n        ...cur\n      })),\n    scopes: scopeList\n  };\n}\nfunction sendSchema(\n  notebook: NotebookPanel,\n  schema: string,\n  manager: schemaManager\n) {\n  // console.log('send Schema');\n\n  const content: KernelMessage.IExecuteRequestMsg['content'] = {\n    code: '%pb_update ' + schema,\n    silent: true,\n    store_history: false\n  };\n  // const stringSchema = { pagebreakSchema: schema };\n  // console.log('schema string:', JSON.stringify(stringSchema));\n  const kernel = notebook?.sessionContext?.session?.kernel;\n  if (!kernel) {\n    throw new Error('Session has no kernel.');\n  }\n  if (manager.future === null || manager.future.isDisposed) {\n    console.log('sending content', schema);\n    const future = kernel.requestExecute(content);\n    // Handle iopub messages\n    future.onIOPub = msg => {\n      if (msg.header.msg_type !== 'status') {\n        // console.log(msg.content);\n      }\n    };\n    manager.future = future;\n  }\n\n  // kernelModel.execute();\n}\nfunction updatePagebreak(app: JupyterFrontEnd, manager: schemaManager) {\n  const notebook = app.shell?.currentWidget as NotebookPanel;\n  const schema = buildNotebookSchema(notebook);\n  console.log('schema check');\n\n  // eslint-disable-next-line no-constant-condition\n  if (!_.isEqual(manager.previousSchema, schema) || true) {\n    // console.log('previous schema', manager.previousSchema);\n    if (!notebook.sessionContext || !notebook.sessionContext.session?.kernel) {\n      return;\n    }\n    manager.previousSchema = schema;\n    tagNotebookCells(notebook, schema);\n    const jsonSchema = JSON.stringify(schema);\n    // notebook?.content?.widgets?.map(cell => {\n    //   cell.model.setMetadata('pagebreak_schema', jsonSchema);\n    // });\n    sendSchema(notebook, jsonSchema, manager);\n    // console.log('schema changed', jsonSchema);\n  }\n}\nexport default plugin;\n","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../node_modules/css-loader/dist/runtime/api.js\";\nimport ___CSS_LOADER_AT_RULE_IMPORT_0___ from \"-!../node_modules/css-loader/dist/cjs.js!./base.css\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n___CSS_LOADER_EXPORT___.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, `\n`, \"\",{\"version\":3,\"sources\":[],\"names\":[],\"mappings\":\"\",\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","\n      import API from \"!../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\";\n      import domAPI from \"!../node_modules/style-loader/dist/runtime/styleDomAPI.js\";\n      import insertFn from \"!../node_modules/style-loader/dist/runtime/insertBySelector.js\";\n      import setAttributes from \"!../node_modules/style-loader/dist/runtime/setAttributesWithoutAttributes.js\";\n      import insertStyleElement from \"!../node_modules/style-loader/dist/runtime/insertStyleElement.js\";\n      import styleTagTransformFn from \"!../node_modules/style-loader/dist/runtime/styleTagTransform.js\";\n      import content, * as namedExport from \"!!../node_modules/css-loader/dist/cjs.js!./index.css\";\n      \n      \n\nvar options = {};\n\noptions.styleTagTransform = styleTagTransformFn;\noptions.setAttributes = setAttributes;\n\n      options.insert = insertFn.bind(null, \"head\");\n    \noptions.domAPI = domAPI;\noptions.insertStyleElement = insertStyleElement;\n\nvar update = API(content, options);\n\n\n\nexport * from \"!!../node_modules/css-loader/dist/cjs.js!./index.css\";\n       export default content && content.locals ? content.locals : undefined;\n"],"names":[],"sourceRoot":""}